local global_data_str --[[remove]]
--[[json global_data_str ../data.json]]

function reset()
  global_data_table = unpack_table(global_data_str)
  shop_sprite_sheet = "641264126412641264126412641264126412644744126412641264123417241225441264126412147264826412641264122415341264126412541714122417341264121415441264123417241215174412641264127412341524126412641264126412641264126412441724123417241264126412641234172412151744126412641234153412641224153412641264126412641264126412341734124417141264826412341724121517441264126412748264126412641264826412641224c5126412641264124417141215174412641264127412641264126412641264126412641264122415a1151214154412441514126452172215174412641264127412441514126412641224153412641264126412141524151412241521191139311512441514126412641244171412151744123415241264127412641264126412641264123415241264126412241521692115126412641264121415241714121517441264126412741264126412648264126412648224152119113931158264126412441714121517448264127412641264126412641264126412641264122415a1151264126412641244161412151715341264126412741264126412641264126412641264123415241224c51234152412641264122416141614122544122415341264127412343f122f141f243f143f1264122415341264126412641274126412641264126412341624121517441264126412741224ff4f4415141264126412441514126412741264126412641224153412641215174412641264127412144f201f101f102f102f202f126482641264126412741264126412641264126412151744126412441514127412341f103f101f101f101f101f101f102f6412641264126412641234153412641264126482641215174412641264127412243f102f301f101f101f202f12641264126482641274126412641214164412641264121517441264827412142f203f101f102f102f104f6412441514126412641264121472641264123634124415141264121517441264126412741224ff3f126412641264121415241514126412741264126412141620241264126412151744126412241534122415441224ff1f141f1264126412641264126412741264126412342014181418441264121517153412641264127412341f24121f141f34122f141f241264126412641254206412541514126412641244201814184412641225441264126412147264126482641264176412143120122415341274124415141264124416201654126412151744126412641274126412641264126412541712173436312021141514152412741264126412341615161016154412641215174412641264127412641264124415141264125417122524466185648264123416554412641215175264126412741264126412641264124417141215174412dd127412641264124455441264121517441264126412541514126412341524126412641244171412151744126412641214fdad557d18cd509d641264121415441264126412441714121517441264126412149d57bd557d17bd704d183d64126412641264126412441714121517441264126412148d175d17ad55dd572d504d382d6412648264126412441714121517441264126412145d26177d173d186d35bd375d774d382d6412641264126412641234172412151724151412641214154412144d169d173d38dd164d179d1057103d372d6412141524151412641264126412341724121517441264126412145d164d18172d173d37cd163d27bd504d372d6412641264126412641234172412151752648214fd173d17ed2617fd8d173d648264126412641234172412151744126412641214fd1d17fdfdfd2df0f0f0f0f0f0f0f0"
  map_table = {
    "fcfcfcfcfc8c139c33ac33fc1c33fcfcfcfcfc7c337c538c536c137c43fcfc3c102c102c10fcfccc336c737c635c136c53fcfc4c201c20fcfccc534c935c635c335c538c6afcfc7c102c102c106cf121535f732f142f834f333f736caabc101c101c10fc5c201c207cf14f146f935f832f531f835ccabc101c10fcfc3ce12f148fb32fb31f533f634ceafc4c101c101c10fc7cd1ef736f834f144f733cfa1afc4c101c10fc8c4114817f234f932f141f938f833cfa1afcfcfc2124917f23192fb31fc35fa32cfa3afcfcec1124a11c3f26209f147fa32fe32cfa3afc7c102c102c10fce12c46105f143f146fc34fb32cfa3afc8c201c20fc1cf12c469f145fe37f732cfa3afcfcecf1112c191cff7f246f144f932cfa3afcfcecc11c512cff3f202f247fd32cfa3afcfcecd11c412c5f25af50245ff33cfa1adc101c101c10fcccd11c412cff142f50df833cfa1aec101c10fcdcc11c512caf148f50bf934ceafcfcfc1cb11c513c1f84af151015afc35ccafcfc5c101c101c107cf1113c2489247f553ff3336caafcfc7c101c108c611c714c14c9144f757fe38c6afcfcfc5c711c416c14c9142fa53f146fa3fcfcfcfc4c711c316c1f3489342fa58fc3fcfcfcfc4c611c414c3fe43f857fe3fcfcfcfc4c611c313c5fe4ff2ff38c102c102c10fcfcfc4c511c412c1f143ff414dff3339c201c20fcfcfc5c913c4ff4349ff363fcfcfcfc3c13813c3ff4745f14ff74fcfc1c13fcfc1c13812c2f641f541fc4ff5f74fcfc1c13bc13fc4c13713c445f345f445f24af148f74fcfc33ac13fc3c23712caf347f34ff7f142f74fcfc339c33fc1c33711caf343f145f342f14ff6f74f0f0f0f0f0f0f0f0",
    "f18117f1d1178117f1f1f1f1b1179117f11117a117c11b611bf1f1e13c311cf1311b5117711b7117111b611bc11b611b11171113211bf1f1b13c313cf117213bc11b912b2113211b21171b6117111b2113213b2113112bf1313c313cf1f1a1133b611b2113113b13111b1113213b2113113b13111b3113312b2113114b11332bf1112c313c311cf1f191232b1123311b1123112b232b23114b11234b232b1123213b11334b333bf1f1f1f161333b23212b11233b232b23115b332b233b435b432b334bf1f1f1f141171b332b433b11233b134b234b432b234b334b532b235bf1f1f1f1511b431b131b233b332b234b234b736b332b936bf1f1f1f1412b632b231b735b332b738bf34bf1f1f1f1411b732b231b637b233b736be36bf1f1f1f141734b837b232b738bc37bf1f1f1f141635b838ba39ba38bf1f1f1f141536b63ab93bbb36bf1f1f1f141537b63ab63bbb38bf1f1f1f141637b638b93ab939bf1f1f1f14143ab33cb63cb73abf1f1f1f14123cb23eb33fb1b639b211c312c311cf1f1f171439b43fb142f243f244f83ab313c213cf1f1f18133bb13fb2b147f246f241f24bbf1f1f1f141fb8b246f244f14df248f34f1f1f1f1411ffb4f241f242f1bff1f1bbf1b4f34f1f1f1f1411f14ab2f242f1b4f241f1b4f142f1baf1b143f1b5f1b3f143ff131f292911c811c311f243f246f242f2b9f1b8f258f3b6f143f1b2ff131221410f45412912c412c111c216f243f141f1b1f1bbf1b1f241f143f1b4f147f1b2f149f1b1ff131121412f4641012a14c412c4f253f1b2f4b3f147f1b1f443f1b6f2b4f1b8f2b4ff1311214f2a2f1411f141f1b3f1b1f2b2f2b3f144f255f347f1b1f2b9f1b2f141f1b5ff13112141211121410f45412f1312f1b5f4b1f1b7f141f256f343f143f2b9f3b6f142ff1311214122112f454101412f1214f141baf142b8f5c349f147f2b3f156ff13112141221f2a2f111145f1b2f147f1b5f5c411c24df7c9ff1211c1214121c11121412f4641012f15fcc1f5ca1ac2f4c618c1ff1313c211214221410f45412e12f3cb13cf1813cf1311cf18112141211f292d1f0f0f0f0f0f0f0f0"
  }
  -- debug_printh_table(global_data_table, "")
  fish_inventory = {}
  current_rod = global_data_table.rods[1]
  rod_inventory = {current_rod}
  compendium_rect = BorderRect:new(
    Vec:new(8, 8), Vec:new(111, 111),
    7, 5, 3
  )
  compendium_sprite_rect = BorderRect:new(
    compendium_rect.position + Vec:new(5, 5),
    Vec:new(24, 24), 
    7, 0, 2
  )
  opened_fish_page = nil
  menus = {}
  for data in all(global_data_table.menu_data) do 
    add(menus, Menu:new(
      data.name,
      data.prev,
      Vec:new(data.position),
      parse_menu_content(data.content),
      _ENV[data.hint],
      unpack(global_data_table.palettes.menu)
    ))
  end
  fishing_areas = {}
  for area in all(global_data_table.areas) do
    add(fishing_areas, FishingArea:new(area))
  end
  
  show_fish_details, fish_detail_flag = false
  show_rod_shop, show_rod_details, rod_detail_flag = false
  fishpedia = Inventory:new(34, 36, 
    Vec:new(5, 5), 30, 
    { Vec:new(8, 8), Vec:new(111, 111), 7, 5, 3 }
  )
  local fish_names, count = {}, 0
  for area in all(global_data_table.areas) do 
    for fish in all(area.fishes) do 
      if not table_contains(fish_names, fish.stats[1]) then 
        Inventory.add_entry(
          fishpedia, 
          count, 
          fish.stats[2], 
          fish.stats[1], 
          {
            description = fish.description,
            units = fish.units,
            rarity = fish.stats[5]
          }, 
          true,
          fish.disabled and false or true
        )
        add(fish_names, fish.stats[1])
        count += 1
      end
    end
  end

  cat = Animator:new(global_data_table.animation_data.cat, true)

  shopkeeper = global_data_table.shopkeeper
  rod_shop = Inventory:new(34, 36,
      Vec:new(2, 2), 4, 
      { Vec:new(75, 11), Vec:new(45, 45), 5, 4, 3}, Vec:new(60,-4)
  )
  for i, rod in pairs(global_data_table.rods) do
    Inventory.add_entry(rod_shop, i-1, rod.spriteID, rod.cost, {}, false)
  end
  Inventory.get_entry(rod_shop, 0).is_disabled = true

  credit_y_offsets = {}
  for y in all(global_data_table.credit_offsets) do 
    add(credit_y_offsets, y)
  end

  boid_array = {}
  for i=1, 15 do 
    add(boid_array, Boid:new(Inventory.get_random_sprite(fishpedia), rnd(127), rnd(127)))
  end

  cash = 100
  loaded_area = -3
  get_menu("title").enable = true
end